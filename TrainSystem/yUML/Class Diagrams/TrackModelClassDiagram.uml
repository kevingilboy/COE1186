@startuml

title Track Model Class Diagram
'skinparam backgroundColor transparent'
skinparam classBackgroundColor #e6ffcc
skinparam classBorderColor 	#049595
skinparam packageBorderColor  #049595
skinparam arrowColor #006666

package "Shared"{
    interface Module{
        +timeUpdate(SimTime): boolean
    }

    class SimTime{
        +hr: int
        +min: int
        +sec: int
        +toString(): String
    }
}

package Module.TrackModel{
    class TrackModel {
        -simulator: Simulator
        -trackTemperature: int
        -blocks : Block[]
        +getBlock(int): Block
        +getOccupiedBlock(String) : Block
        +getNextBlock(String, int) : Block
        +getPreviousBlock(String, int) : Block
        +getBlockSpeedLimits(String) : int[]
    }

    class Block {
        -line : String
        -id : int
        ..
        -railStatus : boolean
        -powerStatus : boolean
        -trackCircuitStatus : boolean
        ..
        -speedLimit : int
        -elevation : double
        -cumElevation : double
        -direction : int
        -length : double
        -underground : boolean
        -crossing : boolean
        -station : Station
        -switch : Switch
        -occupied : boolean
        __
        +getOccupancy() : boolean
        +getLine() : String
        +getId() : int
        +getSpeedLimit() : double
        +getElevation() : double
        +getCumElevation() : double
        +getDirection() : int
        +getLength() : double
        +getSwitch() : Switch
        +getStation() : boolean
        +getUndergroundState() : boolean
        ..
        +setBlockOccupancy(boolean)
    }

    class Switch{
        -state : boolean
        -head : boolean
        -portNorm : int
        -portAlt : int
        +getState() : boolean
        +getHead() : boolean
        +getPortNorm() : int 
        +getPortAlt() : int
        +setState(boolean)
    }

    class Station{
        -id : string
        -doorside : boolean
        -ticketSales : int
        +getId() : string
        +getTicketSales() : int
        +getDoorside() : boolean
    }

    class Light{
        -state : boolean
        -status : boolean
        ..
        +getState() : boolean
        +getStatus() : boolean
        +setState()
    }

    class Crossing{
        -state : boolean
        -status : boolean
        ..
        +getState() : boolean
        +getStatus() : boolean
        +setState()
    }

    class TrackModelGUI{
        -trackModel : TrackModel
        -currentBlock : Block
        +importTrack(string)
        -displayBlockInfo(Block)    
        -setCurrentBlock(Block)
        -nextBlock(Block) : Block
        -previousBlock(Block) : Block
        -showRailStatus(Block) 
        -showPowerStatus(Block)
        -showTrackCircuitStatus(Block)
        -setRailFailure(Block)
        -setTrackCircuitFailure(Block)
        -setPowerFailure(Block)
        -renderTrackView()
    }
}

TrackModel .|> Module : implements
TrackModel "1.."*-- TrackModelGUI : instantiates
Block "1..*"<-o TrackModel : contains
'Switch "0..1"---* Block'
Block *--"0..1" Switch : may have
Block *--"0..1" Station : may have
Block *--"0..1" Light : may have
Block *--"0..1" Crossing : may have
Module -- SimTime : imports

@enduml