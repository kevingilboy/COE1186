@startuml

title CTC
skinparam backgroundColor transparent
skinparam classBackgroundColor #e6ffcc
skinparam classBorderColor 	#049595
skinparam packageBorderCOlor  #049595
skinparam arrowColor #006666


package Shared{
  interface Module{
    +timeUpdate(SimTime) : Boolean
  }
  class SimTime{
    +hr : int
    +min : int
    +sec : int
    +toString() : String
  }
}
package Module.Ctc {
  class Ctc {
    trains : Train[]
    schedulesInQueue : Schedule
    blocks : Block[]
    addTrainToQueue(Schedule)
    dispatchTrainFromQueue(String)
    importSchedule(String)
    setTicketSales(String,int)
    updateSchedule(String,Schedule)

    getBlocks()
    getBlockOccupancy(String,String)
    getBlockStatus(String,String)
    getSwitchState(String,String)
    setBlockStatus(String,String,String)
    setSwitchState(String,String,boolean)
    toggleSwitchState(String,String)
  }

  class Train{
    speed : int
    authority : int
    nextStop : String
    getSpeed() : int
    getAuthority() : int
    getSchedule() : Schedule
    setSpeed(int)
    setAuthority(int)
    setSchedule(Schedule)
  }
  class CtcGui {
    createSchedule(Schedule) : Schedule
    editSchedule(Schedule) : Schedule
    repaint()
  }
  class ScheduleEditorGui {

  }
  class Schedule {
    departureTime : SimTime
    line : String
    name : String
    authority : int
    dispatched : Boolean
    toStringArray() : String
  }
  class Stop {
    arrivalTime : SimTime
    departureTime : SimTime
  }
  class Block{
    label :String
    line : String
    isStation : Boolean
    station : String
    isSwitch : Boolean
    isStation() : Boolean
    getStationName() : String
    isSwitch() : Boolean
  }
}

Module--SimTime

Module <|. Ctc

Ctc "0..*"-> Block : has knowledge of
Ctc "0..*"--> Schedule : contains in queue
Ctc "0..*"--> Train : monitors
Ctc "1" *-> CtcGui : instantiates

CtcGui *--> ScheduleEditorGui

Schedule "1.." -> Stop : contains
Stop "1" -> Block : located at

Train "1" *-> Schedule : is following
Train "1" -> Block : located at

@enduml
