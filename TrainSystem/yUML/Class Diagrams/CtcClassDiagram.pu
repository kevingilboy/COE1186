@startuml

title CTC
skinparam backgroundColor transparent
skinparam classBackgroundColor #e6ffcc
skinparam classBorderColor 	#049595
skinparam packageBorderCOlor  #049595
skinparam arrowColor #006666


package Shared{
  interface Module{
    +timeUpdate(SimTime) : Boolean
  }
  class SimTime{
    +hr : int
    +min : int
    +sec : int
    +toString() : String
  }
}
package Module.Ctc {
  class Ctc {
    -ctcGui : CtcGui
    -beginTime : SimTime
    -currentTime : SimTime
    +trains : Train[]
    +schedulesInQueue : Schedule[]
    +blocks : Block[]
    -runningTicketSales : int
    -throughput : double
    __
    ..Schedule Creation and Queue..
    +importSchedule(String)
    +addTrainToQueue(Schedule)
    +dispatchTrainFromQueue(String)
    +updateSchedule(String,Schedule)
    ..Train Communication..
    -transmitSuggestedSetpointSpeed(String,int)
    -transmitCtcAuthority(String,double)
    ..Block Communication..
    -receiveBlocks()
    -receiveBlockOccupancy(String,String)
    -receiveBlockStatus(String,String)
    -receiveSwitchState(String,String)
    -setBlockStatus(String,String,String)
    -transmitSwitchState(String,String,boolean)
    ..Throughput..
    -calculateThroughput(int) : double
    +addTicketSales(int)
    +getThroughput() : double
    ..Helpers..
    -getQueuedScheduleByName(String) : Schedule
    -getTrainByName(String) : Train
    -getBlockByNumber(String,int) : Block
  }
  class CtcGui {
    +ctc : Ctc
    -createSchedule(Schedule) : Schedule
    -editSchedule(Schedule) : Schedule
    +repaint()
  }
  class ScheduleEditorGui {
    -ctcGui : CtcGui
    -submitScheduleToCtc()
  }
  class Train{
    -schedule : Schedule
    -line : String
    -location : int
    -speed : int
    -authority : int
    -nextStop : String
    __
    --Getters--
    +getSchedule() : Schedule
    +getNextStop() : String
    +getLine() : String
    +getSpeed() : int
    +getAuthority() : I=int
    ..Setters..
    +setSchedule(Schedule)
    +setSpeed(int)
    +setAuthority(int)
  }
  class Schedule {
    +stops : Stop[]
    +departureTime : SimTime
    +line : String
    +name : String
    +authority : int
    +dispatched : Boolean
    +toStringArray() : String
  }
  class Stop {
    +location : Block
    +arrivalTime : SimTime
    +departureTime : SimTime
  }
  class Block{
    ..General..
    +line : String
    +number : int
    ..Station..
    +isStation : Boolean
    +stationName : String
    ..Station..
    +isSwitch : Boolean
    +switchState : Boolean
    __
  }
}

Module--SimTime : imports

Module <|. Ctc : implements

Ctc o->"0..*" Block : has knowledge of
Ctc o->"0..*" Schedule : contains in queue
Ctc o-->"0..*" Train : monitors
Ctc *-"1" CtcGui : instantiates

CtcGui *-"1" ScheduleEditorGui : instantiates

Schedule o->"1..*" Stop : contains
Stop o->"1" Block : located at

Train *->"1" Schedule : is following
Train o->"1" Block : located at

@enduml
